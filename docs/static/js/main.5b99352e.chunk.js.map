{"version":3,"sources":["components/AddCategories.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","target","reset","type","placeholder","onChange","value","getGifs","category","a","url","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MA+BeA,EA5BO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEtB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACG,sBAAMC,SAVY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCJ,EAAEK,OAAOC,UAKZ,SACG,uBACGC,KAAK,OACLC,YAAY,2BACZC,SAjBiB,SAACT,GAAD,OAAOF,EAAcE,EAAEK,OAAOK,a,+BCR9CC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,0DAE2CF,EAF3C,sDAIDG,MAAMD,GAJL,cAIdE,EAJc,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QAXnB,kBAebK,GAfa,4CAAH,sDCoBLO,EAjBM,SAACd,GACnB,MAA0BhB,mBAAS,CAChCsB,KAAM,GACNS,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAU,WACPnB,EAAQC,GACJmB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACpBX,KAAMc,EACNL,SAAS,SAEf,CAACf,IAEGgB,GCRKK,EATK,SAAC,GAAoB,IAAlBV,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAC3B,OACG,sBAAKoB,UAAU,OAAf,UACG,qBAAKC,IAAKrB,EAAKsB,IAAKb,IACpB,4BAAIA,QCuBEc,EAxBC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAEhB,EAAkCc,EAAad,GAAjCY,EAAd,EAAQN,KAAcS,EAAtB,EAAsBA,QAEtB,OACG,qCACG,oBAAIO,UAAU,iBAAd,SAAgCtB,IAE/Be,GAAW,2CAEZ,qBAAKO,UAAU,kDAAf,SAEMV,EAAOJ,KAAI,SAAAkB,GAAG,OACX,cAAC,EAAD,eAEOA,GADCA,EAAIhB,aCUfiB,EAvBM,WAElB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACG,qCACG,8CACA,cAAC,EAAD,CAAeA,cAAeA,IAC9B,uBACA,6BAEM6C,EAAWpB,KAAI,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEGA,SAAUA,GADLA,YCZ1B6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.5b99352e.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategories = ({ setCategories }) => {\r\n\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n   const handleInputChange = (e) => setInputValue(e.target.value);\r\n\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length > 2) {\r\n         setCategories(categ => [inputValue, ...categ]);\r\n         e.target.reset();\r\n      }\r\n   };\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input\r\n            type=\"text\"\r\n            placeholder=\"Ingrese una CategorÃ­a\"\r\n            onChange={handleInputChange}\r\n         />\r\n      </form>\r\n   );\r\n};\r\n\r\nexport default AddCategories;\r\n\r\n\r\nAddCategories.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n};","export const getGifs = async (category) => {\r\n\r\n   const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${category}&api_key=BW5indUo2Vu7uirnkdoiTek5HtsWIFgJ`;\r\n\r\n   const resp = await fetch(url);\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map(gif => {\r\n      return {\r\n         id: gif.id,\r\n         title: gif.title,\r\n         url: gif.images.downsized_medium.url\r\n      };\r\n   });\r\n\r\n   return gifs;\r\n};","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = (category) => {\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true\r\n   });\r\n\r\n   useEffect(() => {\r\n      getGifs(category)\r\n         .then(imgs => setState({\r\n            data: imgs,\r\n            loading: false\r\n         }));\r\n   }, [category]);\r\n\r\n   return state; // { data:[], loading: true }\r\n};\r\n\r\nexport default useFetchGifs;\r\n","const GifGridItem = ({ title, url }) => {\r\n   return (\r\n      <div className=\"card\">\r\n         <img src={url} alt={title} />\r\n         <p>{title}</p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n   const { data: images, loading } = useFetchGifs(category);\r\n\r\n   return (\r\n      <>\r\n         <h3 className=\" animate__tada\">{category}</h3>\r\n\r\n         {loading && <p>Loading...</p>}\r\n\r\n         <div className=\"card-grid animate__animated animate__fadeInLeft\">\r\n            {\r\n               images.map(img => (\r\n                  <GifGridItem\r\n                     key={img.id}\r\n                     {...img}\r\n                  />\r\n               ))\r\n            }\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState } from \"react\";\r\nimport AddCategories from \"./components/AddCategories\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n\r\n   return (\r\n      <>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategories setCategories={setCategories} />\r\n         <hr />\r\n         <ol>\r\n            {\r\n               categories.map(category =>\r\n                  <GifGrid\r\n                     key={category}\r\n                     category={category}\r\n                  />\r\n               )\r\n            }\r\n         </ol>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}